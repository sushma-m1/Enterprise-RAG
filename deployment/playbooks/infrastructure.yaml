# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
---
- name: Additional gather facts for Kubespray
  hosts: k8s_cluster
  tags:
    - always
  tasks:
    - name: Gather facts
      ansible.builtin.setup:
        gather_subset:
          - all

- name: Set facts for kubespray deployment
  hosts: k8s_cluster
  tags:
    - install
    - delete
  tasks:
    - name: Set proxy facts
      ansible.builtin.set_fact:
        http_proxy: "{{ httpProxy | default('') }}"
        https_proxy: "{{ httpsProxy | default('') }}"

    - name: Set Kubernetes configuration facts
      ansible.builtin.set_fact:
        local_path_provisioner_enabled: "{{ install_csi == 'local-path-provisioner' }}"
        kubeconfig_localhost: true
        kube_version: "{{ k8s_version | default('1.31.9') }}"
        supplementary_addresses_in_ssl_keys: "{{ ['10.233.0.1'] + groups['kube_control_plane'] | map('extract', hostvars, ['ansible_host']) | list }}"

- name: Pre-setup tasks
  become: false
  hosts: local
  tasks:
    - name: Pre-configure environment role
      ansible.builtin.include_role:
        name: configure
      tags:
        - configure
        - never

- name: Configure containerd registry mirrors
  hosts: k8s_cluster
  tags:
    - install
  tasks:
    - name: Set containerd registry mirrors configuration for insecure and secure registries
      ansible.builtin.set_fact:
        containerd_registries_mirrors: >
          {{
            [
              {
                "prefix": insecure_registry,
                "mirrors": [
                  {
                    "host": "http://{{ insecure_registry }}",
                    "capabilities": ["pull", "resolve"],
                    "skip_verify": true
                  }
                ]
              },
              {
                "prefix": "docker.io",
                "mirrors": [
                  {
                    "host": "https://registry-1.docker.io",
                    "capabilities": ["pull", "resolve"],
                    "skip_verify": false
                  }
                ]
              }
            ]
          }}
      when: insecure_registry is defined and local_registry | default(false) | bool and deploy_k8s

- name: Install Kubernetes cluster
  tags:
    - install
    - never
  when:
    - deploy_k8s
  ansible.builtin.import_playbook: kubernetes_sigs.kubespray.cluster

- name: Install NFS utilities
  hosts: k8s_cluster
  become: true
  tags:
    - install
    - post-install
  tasks:
    - name: Install NFS utilities on Ubuntu
      ansible.builtin.package:
        name:
          - nfs-common
          - nfs-kernel-server
        state: present
        update_cache: true
      when: 
        - ansible_distribution == "Ubuntu"
        - install_csi == "netapp-trident"

- name: Pre-deletion warnings
  become: false
  hosts: local
  tags:
    - delete
    - never
  tasks:
    - name: Warning about backup and restore resources deletion
      ansible.builtin.pause:
        prompt: |
          WARNING: Velero is enabled with server installation in this deployment.
          Deleting the Kubernetes cluster will permanently remove:
          - All backup objects and their metadata
          - All restore objects and their history
          - All backup data stored in the configured storage backend

          This action cannot be undone.
          (ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
        seconds: 30
      when:
        - velero.enabled | default(false)
        - velero.install_server | default(false)

# Post-installation tasks - can be run independently with post-install tag
- name: Post-installation tasks
  become: false
  gather_facts: false
  hosts: local
  vars:
    helm_timeout: 15m0s
    secure_logs: true
  environment:
    K8S_AUTH_KUBECONFIG: "{{ kubeconfig }}"
  tasks:
    - name: Include post-installation tasks
      ansible.builtin.include_role:
        name: cluster
        tasks_from: post_installation
      tags:
        - install
        - post-install
        - velero-delete
        - delete
        - never

- name: Remove Kubernetes cluster
  tags:
    - delete
    - never
  when:
    - deploy_k8s
  ansible.builtin.import_playbook: kubernetes_sigs.kubespray.reset

- name: Remove Kubernetes cluster artifacts
  become: false
  hosts: local
  tags:
    - delete
    - never
  tasks:
    - name: Remove Kubernetes cluster artifacts
      ansible.builtin.include_role:
        name: cluster
        tasks_from: cleanup_artifacts
      when: deploy_k8s
