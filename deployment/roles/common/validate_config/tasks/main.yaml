---
- name: Set default ansible fact
  ansible.builtin.set_fact:
    config_valid: true
  tags:
    - config

# Check if required fields are set
- name: Check if required fields are set
  ansible.builtin.set_fact:
    config_valid: false
    missing_fields: "{{ missing_fields | default([]) + [item.field] }}"
  when: (item.value is not defined) or (item.value | length == 0) or (item.value == 'FILL_HERE')
  loop:
    - { field: "huggingToken", value: "{{ huggingToken | default('') }}" }
    - { field: "FQDN", value: "{{ FQDN | default('') }}" }
  no_log: "{{ secure_logs }}"
  tags:
    - config

# Check kubeconfig if deploy_k8s is false
- name: Check if kubeconfig exists
  tags:
    - config
  block:
    - name: Resolve kubeconfig path
      ansible.builtin.set_fact:
        resolved_kubeconfig: "{{ kubeconfig | default(inventory_dir + '/artifacts/admin.conf') }}"

    - name: Check if kubeconfig exists
      ansible.builtin.stat:
        path: "{{ resolved_kubeconfig }}"
      register: kubeconfig_stat

    - name: Set kubeconfig issues if file doesn't exist
      ansible.builtin.set_fact:
        config_valid: false
        kubeconfig_issues: "{{ kubeconfig_issues | default([]) + ['Kubeconfig file not found at ' + resolved_kubeconfig] }}"
      when: not kubeconfig_stat.stat.exists

# Check CSI driver type
- name: Check CSI driver type
  ansible.builtin.set_fact:
    config_valid: false
    invalid_csi: "{{ install_csi }}"
  when: install_csi is defined and install_csi | length > 0 and install_csi not in ['local-path-provisioner', 'nfs', 'netapp-trident']
  tags:
    - config

# Check certificates configuration
- name: Check certificates configuration
  when: (certs is defined) and (certs.autoGenerated is defined) and (not certs.autoGenerated | bool)
  tags:
    - config
  block:
    - name: Check certificate paths
      ansible.builtin.set_fact:
        config_valid: false
        cert_issues: "{{ cert_issues | default([]) + [item.issue] }}"
      when: (item.value is not defined) or (item.value | length == 0)
      loop:
        - { issue: "Certificate path not specified", value: "{{ certs.pathToCert | default('') }}" }
        - { issue: "Certificate key path not specified", value: "{{ certs.pathToKey | default('') }}" }

# Check if proxy settings are properly configured
- name: Check proxy configuration
  when: (httpProxy is defined and httpProxy | length > 0) or (httpsProxy is defined and httpsProxy | length > 0)
  tags:
    - config
  block:
    - name: Set required no_proxy values
      ansible.builtin.set_fact:
        required_no_proxy_values: ["localhost", ".svc", ".monitoring", ".monitoring-traces"]

    - name: Set current no_proxy values
      ansible.builtin.set_fact:
        current_no_proxy_values: "{{ (noProxy | default('') | string).split(',') }}"

    - name: Check for missing no_proxy values
      ansible.builtin.set_fact:
        missing_no_proxy_values: "{{ missing_no_proxy_values | default([]) + [item] }}"
      when: item not in current_no_proxy_values
      loop: "{{ required_no_proxy_values }}"

    - name: Update config validity based on no_proxy check
      ansible.builtin.set_fact:
        config_valid: "{{ config_valid and (missing_no_proxy_values is not defined or missing_no_proxy_values | length == 0) }}"

# Display validation results
- name: Display validation results
  ansible.builtin.debug:
    msg: |
      Configuration validation results:
      {% if not config_valid %}
      VALIDATION FAILED: Issues were found in your configuration
      {% if missing_fields is defined and missing_fields|length > 0 %}
      - Missing required fields: {{ missing_fields | join(', ') }}
      {% endif %}
      {% if missing_no_proxy_values is defined and missing_no_proxy_values|length > 0 %}
      - Missing required no_proxy values: {{ missing_no_proxy_values | join(',') }}
        When using HTTP/HTTPS proxies, these values must be in your noProxy setting to ensure internal communication works properly.
        Please update your config.yaml to include these values.
      {% endif %}
      {% if kubeconfig_issues is defined and kubeconfig_issues|length > 0 %}
      - Kubeconfig issues:
        {% for issue in kubeconfig_issues %}
        * {{ issue }}
        {% endfor %}
      {% endif %}
      {% if invalid_csi is defined %}
      - Invalid CSI driver type: '{{ invalid_csi }}'. Supported types are: 'local-path-provisioner', 'nfs'
      {% endif %}
      {% else %}
      VALIDATION PASSED: Configuration is valid
      - Hugging Face token is configured properly
      {% if httpProxy is defined and httpProxy | length > 0 or httpsProxy is defined and httpsProxy | length > 0 %}
      - Proxy configuration is valid with required no_proxy values
      {% endif %}
      - Kubeconfig: {{ resolved_kubeconfig }} exists.
      {% endif %}
  tags:
    - config

- name: Fail if validation failed
  ansible.builtin.fail:
    msg: "Configuration validation failed. Please fix the issues described above."
  when: not config_valid
  tags:
    - config
